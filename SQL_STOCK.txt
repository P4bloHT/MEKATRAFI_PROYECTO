-- Eliminar las tablas dependientes de COMPONENTE_STOCK
DROP TABLE IF EXISTS FAJA_STOCK;
DROP TABLE IF EXISTS POLEA_STOCK;
DROP TABLE IF EXISTS RODAMIENTO_STOCK;
DROP TABLE IF EXISTS MOTORAC_STOCK;
DROP TABLE IF EXISTS MOTORDC_STOCK;
DROP TABLE IF EXISTS TORNILLO_STOCK;

-- Eliminar la tabla COMPONENTE_STOCK si existe
DROP TABLE IF EXISTS COMPONENT_STOCK;

-- Crear tabla COMPONENTE_STOCK con nueva columna MARCA
CREATE TABLE COMPONENT_STOCK (
    NAME VARCHAR(200) NOT NULL,
    DESCRIPCION VARCHAR(400),
    PRECIO_UNITARIO DECIMAL(10,2) NOT NULL,
    STOCK INT NOT NULL,
    PHOTO VARBINARY(MAX) NULL,
    COMPONENT_CODE VARCHAR(10) NOT NULL,
    MARCA VARCHAR(100)
);

-- Crear tabla FAJA_STOCK
CREATE TABLE FAJA_STOCK (
	ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	NAME VARCHAR(200) NOT NULL,
    DESCRIPCION VARCHAR(400),
    PRECIO_UNITARIO DECIMAL(10,2) NOT NULL,
    STOCK INT NOT NULL,
    PHOTO VARBINARY(MAX) NULL,
    COMPONENT_CODE VARCHAR(10) NOT NULL,
    MARCA VARCHAR(100),
    TIPO VARCHAR(50),
    DIAMETROINTER DECIMAL(10,2),
    DIAMETROEXTER DECIMAL(10,2),
    ALTODEGOMA DECIMAL(10,2),

);

-- Crear tabla POLEA_STOCK
CREATE TABLE POLEA_STOCK (
	ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	NAME VARCHAR(200) NOT NULL,
    DESCRIPCION VARCHAR(400),
    PRECIO_UNITARIO DECIMAL(10,2) NOT NULL,
    STOCK INT NOT NULL,
    PHOTO VARBINARY(MAX) NULL,
    COMPONENT_CODE VARCHAR(10) NOT NULL,
    MARCA VARCHAR(100),
    TIPO VARCHAR(50),
    DIAMETROEXTER DECIMAL(10,2),
    MATERIAL VARCHAR(50),
    DIAMETROEJE DECIMAL(10,2),
);

-- Crear tabla RODAMIENTO_STOCK
CREATE TABLE RODAMIENTO_STOCK (
	ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	NAME VARCHAR(200) NOT NULL,
    DESCRIPCION VARCHAR(400),
    PRECIO_UNITARIO DECIMAL(10,2) NOT NULL,
    STOCK INT NOT NULL,
    PHOTO VARBINARY(MAX) NULL,
    COMPONENT_CODE VARCHAR(10) NOT NULL,
    MARCA VARCHAR(100),
    TIPO VARCHAR(50),
    DIAMETROINTER DECIMAL(10,2),
    ANCHO DECIMAL(10,2),
    DIAMETROEXTER DECIMAL(10,2),
);

-- Crear tabla MOTORAC_STOCK
CREATE TABLE MOTORAC_STOCK (
	ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	NAME VARCHAR(200) NOT NULL,
    DESCRIPCION VARCHAR(400),
    PRECIO_UNITARIO DECIMAL(10,2) NOT NULL,
    STOCK INT NOT NULL,
    PHOTO VARBINARY(MAX) NULL,
    COMPONENT_CODE VARCHAR(10) NOT NULL,
    MARCA VARCHAR(100),
    FRAME VARCHAR(50),
    POTENCIA DECIMAL(10,2),
    CLASEPROTECCION VARCHAR(50),
    FASES VARCHAR(50),
);

-- Crear tabla MOTORDC_STOCK
CREATE TABLE MOTORDC_STOCK (
	ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	NAME VARCHAR(200) NOT NULL,
    DESCRIPCION VARCHAR(400),
    PRECIO_UNITARIO DECIMAL(10,2) NOT NULL,
    STOCK INT NOT NULL,
    PHOTO VARBINARY(MAX) NULL,
    COMPONENT_CODE VARCHAR(10) NOT NULL,
    MARCA VARCHAR(100),
    POTENCIA DECIMAL(10,2),
    VELOCIDAD INT,
    VOLTAJE INT,
    MONTAJE VARCHAR(50),
);

-- Crear tabla TORNILLO_STOCK
CREATE TABLE TORNILLO_STOCK (
	ID INT NOT NULL PRIMARY KEY IDENTITY(1,1),
	NAME VARCHAR(200) NOT NULL,
    DESCRIPCION VARCHAR(400),
    PRECIO_UNITARIO DECIMAL(10,2) NOT NULL,
    STOCK INT NOT NULL,
    PHOTO VARBINARY(MAX) NULL,
    COMPONENT_CODE VARCHAR(10) NOT NULL,
    MARCA VARCHAR(100),
    TIPO VARCHAR(50),
    LONGITUD DECIMAL(10,2),
    ROSCA VARCHAR(50),
    MATERIAL VARCHAR(50),
);
--------------------ADD------------------------------

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_AddFaja_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_AddFaja_stock]
END
GO

CREATE PROCEDURE dbo.usp_AddFaja_stock (
    @TIPO VARCHAR(50),
    @DIAMETROINTER DECIMAL(10,2),
    @DIAMETROEXTER DECIMAL(10,2),
    @ALTODEGOMA DECIMAL(10,2),
    @NAME VARCHAR(200),
    @DESCRIPCION VARCHAR(400),
    @PRECIO_UNITARIO DECIMAL(10,2),
    @STOCK INT,
    @PHOTO VARBINARY(MAX),
    @COMPONENT_CODE VARCHAR(10),
    @MARCA VARCHAR(100),
    @ID INT OUTPUT
)
AS
BEGIN
    -- Insertar en COMPONENTE_STOCK
    INSERT INTO COMPONENT_STOCK (NAME, DESCRIPCION, PRECIO_UNITARIO, STOCK, PHOTO,  COMPONENT_CODE, MARCA)
    VALUES (@NAME, @DESCRIPCION, @PRECIO_UNITARIO, @STOCK, @PHOTO, @COMPONENT_CODE, @MARCA);

    -- Insertar en FAJA_STOCK
    INSERT INTO FAJA_STOCK (NAME, DESCRIPCION, PRECIO_UNITARIO, STOCK, PHOTO, COMPONENT_CODE, MARCA, TIPO, DIAMETROINTER, DIAMETROEXTER, ALTODEGOMA)
    VALUES (@NAME, @DESCRIPCION, @PRECIO_UNITARIO, @STOCK, @PHOTO, @COMPONENT_CODE, @MARCA, @TIPO, @DIAMETROINTER, @DIAMETROEXTER, @ALTODEGOMA);

    -- Devolver el ID del componente insertado
    SET @ID = SCOPE_IDENTITY();
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_AddPolea_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_AddPolea_stock]
END
GO

CREATE PROCEDURE dbo.usp_AddPolea_stock (
    @TIPO VARCHAR(50),
    @DIAMETROEXTER DECIMAL(10,2),
    @MATERIAL VARCHAR(50),
    @DIAMETROEJE DECIMAL(10,2),
    @NAME VARCHAR(200),
    @DESCRIPCION VARCHAR(400),
    @PRECIO_UNITARIO DECIMAL(10,2),
    @STOCK INT,
    @PHOTO VARBINARY(MAX),
    @COMPONENT_CODE VARCHAR(10),
    @MARCA VARCHAR(100),
    @ID INT OUTPUT
)
AS
BEGIN
    -- Insertar en COMPONENTE_STOCK
    INSERT INTO COMPONENT_STOCK (NAME, DESCRIPCION, PRECIO_UNITARIO, STOCK, PHOTO,  COMPONENT_CODE, MARCA)
    VALUES (@NAME, @DESCRIPCION, @PRECIO_UNITARIO, @STOCK, @PHOTO,  @COMPONENT_CODE, @MARCA);

    -- Insertar en POLEA_STOCK
    INSERT INTO POLEA_STOCK (NAME, DESCRIPCION, PRECIO_UNITARIO, STOCK, PHOTO, COMPONENT_CODE, MARCA, TIPO, DIAMETROEXTER, MATERIAL, DIAMETROEJE)
    VALUES (@NAME, @DESCRIPCION, @PRECIO_UNITARIO, @STOCK, @PHOTO,  @COMPONENT_CODE, @MARCA, @TIPO, @DIAMETROEXTER, @MATERIAL, @DIAMETROEJE);

    -- Devolver el ID del componente insertado
    SET @ID = SCOPE_IDENTITY();
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_AddRodamiento_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_AddRodamiento_stock]
END
GO

CREATE PROCEDURE dbo.usp_AddRodamiento_stock (
    @TIPO VARCHAR(50),
    @DIAMETROINTER DECIMAL(10,2),
    @ANCHO DECIMAL(10,2),
    @DIAMETROEXTER DECIMAL(10,2),
    @NAME VARCHAR(200),
    @DESCRIPCION VARCHAR(400),
    @PRECIO_UNITARIO DECIMAL(10,2),
    @STOCK INT,
    @PHOTO VARBINARY(MAX),
    @COMPONENT_CODE VARCHAR(10),
    @MARCA VARCHAR(100),
    @ID INT OUTPUT
)
AS
BEGIN
    -- Insertar en COMPONENTE_STOCK
    INSERT INTO COMPONENT_STOCK (NAME, DESCRIPCION, PRECIO_UNITARIO, STOCK, PHOTO,  COMPONENT_CODE, MARCA)
    VALUES (@NAME, @DESCRIPCION, @PRECIO_UNITARIO, @STOCK, @PHOTO,  @COMPONENT_CODE, @MARCA);

    -- Insertar en RODAMIENTO_STOCK
    INSERT INTO RODAMIENTO_STOCK (NAME, DESCRIPCION, PRECIO_UNITARIO, STOCK, PHOTO,  COMPONENT_CODE, MARCA, TIPO, DIAMETROINTER, ANCHO, DIAMETROEXTER)
    VALUES (@NAME, @DESCRIPCION, @PRECIO_UNITARIO, @STOCK, @PHOTO,  @COMPONENT_CODE, @MARCA, @TIPO, @DIAMETROINTER, @ANCHO, @DIAMETROEXTER);

    -- Devolver el ID del componente insertado
    SET @ID = SCOPE_IDENTITY();
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_AddMotorAC_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_AddMotorAC_stock]
END
GO

CREATE PROCEDURE dbo.usp_AddMotorAC_stock (
    @FRAME VARCHAR(50),
    @POTENCIA DECIMAL(10,2),
    @CLASEPROTECCION VARCHAR(50),
    @FASES VARCHAR(50),
    @NAME VARCHAR(200),
    @DESCRIPCION VARCHAR(400),
    @PRECIO_UNITARIO DECIMAL(10,2),
    @STOCK INT,
    @PHOTO VARBINARY(MAX),
    @COMPONENT_CODE VARCHAR(10),
    @MARCA VARCHAR(100),
    @ID INT OUTPUT
)
AS
BEGIN
    -- Insertar en COMPONENTE_STOCK
    INSERT INTO COMPONENT_STOCK (NAME, DESCRIPCION, PRECIO_UNITARIO, STOCK, PHOTO, COMPONENT_CODE, MARCA)
    VALUES (@NAME, @DESCRIPCION, @PRECIO_UNITARIO, @STOCK, @PHOTO, @COMPONENT_CODE, @MARCA);

    -- Insertar en MOTORAC_STOCK
    INSERT INTO MOTORAC_STOCK (NAME, DESCRIPCION, PRECIO_UNITARIO, STOCK, PHOTO,  COMPONENT_CODE, MARCA, FRAME, POTENCIA, CLASEPROTECCION, FASES)
    VALUES (@NAME, @DESCRIPCION, @PRECIO_UNITARIO, @STOCK, @PHOTO,  @COMPONENT_CODE, @MARCA, @FRAME, @POTENCIA, @CLASEPROTECCION, @FASES);

    -- Devolver el ID del componente insertado
    SET @ID = SCOPE_IDENTITY();
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_AddTornillo_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_AddTornillo_stock]
END
GO

CREATE PROCEDURE dbo.usp_AddTornillo_stock (
    @TIPO VARCHAR(50),
    @LONGITUD DECIMAL(10,2),
    @ROSCA VARCHAR(50),
    @MATERIAL VARCHAR(50),
    @NAME VARCHAR(200),
    @DESCRIPCION VARCHAR(400),
    @PRECIO_UNITARIO DECIMAL(10,2),
    @STOCK INT,
    @PHOTO VARBINARY(MAX),
    @COMPONENT_CODE VARCHAR(10),
    @MARCA VARCHAR(100),
    @ID INT OUTPUT
)
AS
BEGIN
    -- Insertar en COMPONENTE_STOCK
    INSERT INTO COMPONENT_STOCK (NAME, DESCRIPCION, PRECIO_UNITARIO, STOCK, PHOTO, COMPONENT_CODE, MARCA)
    VALUES (@NAME, @DESCRIPCION, @PRECIO_UNITARIO, @STOCK, @PHOTO, @COMPONENT_CODE, @MARCA);

    -- Insertar en TORNILLO_STOCK
    INSERT INTO TORNILLO_STOCK (NAME, DESCRIPCION, PRECIO_UNITARIO, STOCK, PHOTO,  COMPONENT_CODE, MARCA, TIPO, LONGITUD, ROSCA, MATERIAL)
    VALUES (@NAME, @DESCRIPCION, @PRECIO_UNITARIO, @STOCK, @PHOTO,  @COMPONENT_CODE, @MARCA, @TIPO, @LONGITUD, @ROSCA, @MATERIAL);

    -- Devolver el ID del componente insertado
    SET @ID = SCOPE_IDENTITY();
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_AddMotorDC_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_AddMotorDC_stock]
END
GO

CREATE PROCEDURE dbo.usp_AddMotorDC_stock (
    @POTENCIA DECIMAL(10,2),
    @VELOCIDAD INT,
    @VOLTAJE INT,
    @MONTAJE VARCHAR(50),
    @NAME VARCHAR(200),
    @DESCRIPCION VARCHAR(400),
    @PRECIO_UNITARIO DECIMAL(10,2),
    @STOCK INT,
    @PHOTO VARBINARY(MAX),
    @COMPONENT_CODE VARCHAR(10),
    @MARCA VARCHAR(100),
    @ID INT OUTPUT
)
AS
BEGIN
    -- Insertar en COMPONENTE_STOCK
   INSERT INTO COMPONENT_STOCK (NAME, DESCRIPCION, PRECIO_UNITARIO, STOCK, PHOTO, COMPONENT_CODE, MARCA)
    VALUES (@NAME, @DESCRIPCION, @PRECIO_UNITARIO, @STOCK, @PHOTO, @COMPONENT_CODE, @MARCA);

    -- Insertar en MOTORDC_STOCK
    INSERT INTO MOTORDC_STOCK (NAME, DESCRIPCION, PRECIO_UNITARIO, STOCK, PHOTO,  COMPONENT_CODE, MARCA, POTENCIA, VELOCIDAD, VOLTAJE, MONTAJE)
    VALUES (@NAME, @DESCRIPCION, @PRECIO_UNITARIO, @STOCK, @PHOTO,  @COMPONENT_CODE, @MARCA, @POTENCIA, @VELOCIDAD, @VOLTAJE, @MONTAJE);

    -- Devolver el ID del componente insertado
    SET @ID = SCOPE_IDENTITY();
END
GO

-------------UPDATE--------------
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_UpdateFaja_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_UpdateFaja_stock]
END
GO

CREATE PROCEDURE dbo.usp_UpdateFaja_stock (
    @ID INT,
	@TIPO VARCHAR(50),
    @DIAMETROINTER DECIMAL(10,2),
    @DIAMETROEXTER DECIMAL(10,2),
    @ALTODEGOMA DECIMAL(10,2),
    @NAME VARCHAR(200),
    @DESCRIPCION VARCHAR(400),
    @PRECIO_UNITARIO DECIMAL(10,2),
    @STOCK INT,
    @PHOTO VARBINARY(MAX),
    @COMPONENT_CODE VARCHAR(10),
    @MARCA VARCHAR(100)
)
AS
BEGIN
    -- Actualizar en FAJA_STOCK
    UPDATE FAJA_STOCK
    SET NAME = @NAME,
        DESCRIPCION = @DESCRIPCION,
        PRECIO_UNITARIO = @PRECIO_UNITARIO,
        STOCK = @STOCK,
        PHOTO = @PHOTO,
        TIPO = @TIPO,
        DIAMETROINTER = @DIAMETROINTER,
        DIAMETROEXTER = @DIAMETROEXTER,
        ALTODEGOMA = @ALTODEGOMA,
		COMPONENT_CODE = @COMPONENT_CODE,
        MARCA = @MARCA
    WHERE ID = @ID;

    -- Actualizar en COMPONENT_STOCK
    UPDATE COMPONENT_STOCK
    SET NAME = @NAME,
        DESCRIPCION = @DESCRIPCION,
        PRECIO_UNITARIO = @PRECIO_UNITARIO,
        STOCK = @STOCK,
        PHOTO = @PHOTO,
        MARCA = @MARCA
    WHERE COMPONENT_CODE = @COMPONENT_CODE;

END
GO

IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_UpdatePolea_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_UpdatePolea_stock]
END
GO

CREATE PROCEDURE dbo.usp_UpdatePolea_stock (
    @ID INT,
	@TIPO VARCHAR(50),
    @DIAMETROEXTER DECIMAL(10,2),
    @MATERIAL VARCHAR(50),
    @DIAMETROEJE DECIMAL(10,2),
    @NAME VARCHAR(200),
    @DESCRIPCION VARCHAR(400),
    @PRECIO_UNITARIO DECIMAL(10,2),
    @STOCK INT,
    @PHOTO VARBINARY(MAX),
    @COMPONENT_CODE VARCHAR(10),
    @MARCA VARCHAR(100)
)
AS
BEGIN
    -- Actualizar en POLEA_STOCK
    UPDATE POLEA_STOCK
    SET NAME = @NAME,
        DESCRIPCION = @DESCRIPCION,
        PRECIO_UNITARIO = @PRECIO_UNITARIO,
        STOCK = @STOCK,
        PHOTO = @PHOTO,
        TIPO = @TIPO,
        DIAMETROEXTER = @DIAMETROEXTER,
        MATERIAL = @MATERIAL,
        DIAMETROEJE = @DIAMETROEJE,
		COMPONENT_CODE = @COMPONENT_CODE,
        MARCA = @MARCA
    WHERE ID = @ID;

    -- Actualizar en COMPONENT_STOCK
    UPDATE COMPONENT_STOCK
    SET NAME = @NAME,
        DESCRIPCION = @DESCRIPCION,
        PRECIO_UNITARIO = @PRECIO_UNITARIO,
        STOCK = @STOCK,
        PHOTO = @PHOTO,
        MARCA = @MARCA
    WHERE COMPONENT_CODE = @COMPONENT_CODE;

END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_UpdateRodamiento_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_UpdateRodamiento_stock]
END
GO

CREATE PROCEDURE dbo.usp_UpdateRodamiento_stock (
    @ID INT,
	@TIPO VARCHAR(50),
    @DIAMETROINTER DECIMAL(10,2),
    @ANCHO DECIMAL(10,2),
    @DIAMETROEXTER DECIMAL(10,2),
    @NAME VARCHAR(200),
    @DESCRIPCION VARCHAR(400),
    @PRECIO_UNITARIO DECIMAL(10,2),
    @STOCK INT,
    @PHOTO VARBINARY(MAX),
    @COMPONENT_CODE VARCHAR(10),
    @MARCA VARCHAR(100)
)
AS
BEGIN
    -- Actualizar en RODAMIENTO_STOCK
    UPDATE RODAMIENTO_STOCK
    SET NAME = @NAME,
        DESCRIPCION = @DESCRIPCION,
        PRECIO_UNITARIO = @PRECIO_UNITARIO,
        STOCK = @STOCK,
        PHOTO = @PHOTO,
        TIPO = @TIPO,
        DIAMETROINTER = @DIAMETROINTER,
        ANCHO = @ANCHO,
        DIAMETROEXTER = @DIAMETROEXTER,
		COMPONENT_CODE = @COMPONENT_CODE,
        MARCA = @MARCA
    WHERE ID = @ID;

    -- Actualizar en COMPONENT_STOCK
    UPDATE COMPONENT_STOCK
    SET NAME = @NAME,
        DESCRIPCION = @DESCRIPCION,
        PRECIO_UNITARIO = @PRECIO_UNITARIO,
        STOCK = @STOCK,
        PHOTO = @PHOTO,
        MARCA = @MARCA
    WHERE COMPONENT_CODE = @COMPONENT_CODE;

END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_UpdateMotorAC_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_UpdateMotorAC_stock]
END
GO

CREATE PROCEDURE dbo.usp_UpdateMotorAC_stock (
    @FRAME VARCHAR(50),
    @POTENCIA DECIMAL(10,2),
    @CLASEPROTECCION VARCHAR(50),
    @FASES VARCHAR(50),
    @NAME VARCHAR(200),
    @DESCRIPCION VARCHAR(400),
    @PRECIO_UNITARIO DECIMAL(10,2),
    @STOCK INT,
    @PHOTO VARBINARY(MAX),
    @COMPONENT_CODE VARCHAR(10),
    @MARCA VARCHAR(100)
)
AS
BEGIN
    -- Actualizar en MOTORAC_STOCK
    UPDATE MOTORAC_STOCK
    SET NAME = @NAME,
        DESCRIPCION = @DESCRIPCION,
        PRECIO_UNITARIO = @PRECIO_UNITARIO,
        STOCK = @STOCK,
        PHOTO = @PHOTO,
        FRAME = @FRAME,
        POTENCIA = @POTENCIA,
        CLASEPROTECCION = @CLASEPROTECCION,
        FASES = @FASES,
		COMPONENT_CODE = @COMPONENT_CODE,
        MARCA = @MARCA
    WHERE COMPONENT_CODE = @COMPONENT_CODE;

    -- Actualizar en COMPONENT_STOCK
    UPDATE COMPONENT_STOCK
    SET NAME = @NAME,
        DESCRIPCION = @DESCRIPCION,
        PRECIO_UNITARIO = @PRECIO_UNITARIO,
        STOCK = @STOCK,
        PHOTO = @PHOTO,
        MARCA = @MARCA
    WHERE COMPONENT_CODE = @COMPONENT_CODE;

END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_UpdateMotorDC_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_UpdateMotorDC_stock]
END
GO

CREATE PROCEDURE dbo.usp_UpdateMotorDC_stock (
    @POTENCIA DECIMAL(10,2),
    @VELOCIDAD INT,
    @VOLTAJE INT,
    @MONTAJE VARCHAR(50),
    @NAME VARCHAR(200),
    @DESCRIPCION VARCHAR(400),
    @PRECIO_UNITARIO DECIMAL(10,2),
    @STOCK INT,
    @PHOTO VARBINARY(MAX),
    @COMPONENT_CODE VARCHAR(10),
    @MARCA VARCHAR(100)
)
AS
BEGIN
    -- Actualizar en MOTORDC_STOCK
    UPDATE MOTORDC_STOCK
    SET NAME = @NAME,
        DESCRIPCION = @DESCRIPCION,
        PRECIO_UNITARIO = @PRECIO_UNITARIO,
        STOCK = @STOCK,
        PHOTO = @PHOTO,
        POTENCIA = @POTENCIA,
        VELOCIDAD = @VELOCIDAD,
        VOLTAJE = @VOLTAJE,
        MONTAJE = @MONTAJE,
		COMPONENT_CODE = @COMPONENT_CODE,
        MARCA = @MARCA
    WHERE COMPONENT_CODE = @COMPONENT_CODE;

    -- Actualizar en COMPONENT_STOCK
    UPDATE COMPONENT_STOCK
    SET NAME = @NAME,
        DESCRIPCION = @DESCRIPCION,
        PRECIO_UNITARIO = @PRECIO_UNITARIO,
        STOCK = @STOCK,
        PHOTO = @PHOTO,
        MARCA = @MARCA
    WHERE COMPONENT_CODE = @COMPONENT_CODE;

END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_UpdateTornillo_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_UpdateTornillo_stock]
END
GO

CREATE PROCEDURE dbo.usp_UpdateTornillo_stock (
    @ID INT,
	@TIPO VARCHAR(50),
    @LONGITUD DECIMAL(10,2),
    @ROSCA VARCHAR(50),
    @MATERIAL VARCHAR(50),
    @NAME VARCHAR(200),
    @DESCRIPCION VARCHAR(400),
    @PRECIO_UNITARIO DECIMAL(10,2),
    @STOCK INT,
    @PHOTO VARBINARY(MAX),
    @COMPONENT_CODE VARCHAR(10),
    @MARCA VARCHAR(100)
)
AS
BEGIN
    -- Actualizar en TORNILLO_STOCK
    UPDATE TORNILLO_STOCK
    SET NAME = @NAME,
        DESCRIPCION = @DESCRIPCION,
        PRECIO_UNITARIO = @PRECIO_UNITARIO,
        STOCK = @STOCK,
        PHOTO = @PHOTO,
        TIPO = @TIPO,
        LONGITUD = @LONGITUD,
        ROSCA = @ROSCA,
        MATERIAL = @MATERIAL,
		COMPONENT_CODE = @COMPONENT_CODE,
        MARCA = @MARCA
    WHERE ID = @ID;

    -- Actualizar en COMPONENT_STOCK
    UPDATE COMPONENT_STOCK
    SET NAME = @NAME,
        DESCRIPCION = @DESCRIPCION,
        PRECIO_UNITARIO = @PRECIO_UNITARIO,
        STOCK = @STOCK,
        PHOTO = @PHOTO,
        MARCA = @MARCA
    WHERE COMPONENT_CODE = @COMPONENT_CODE;

END
GO
--------QueryByiD---------------
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_QueryByIdFaja_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_QueryByIdFaja_stock]
END
GO

CREATE PROCEDURE dbo.usp_QueryByIdFaja_stock
    @ID INT
AS
BEGIN
    SELECT *
    FROM FAJA_STOCK
    WHERE ID = @ID;
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_QueryByIdPolea_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_QueryByIdPolea_stock]
END
GO

CREATE PROCEDURE dbo.usp_QueryByIdPolea_stock
    @ID INT
AS
BEGIN
    SELECT *
    FROM POLEA_STOCK
    WHERE ID = @ID;
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_QueryByIdRodamiento_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_QueryByIdRodamiento_stock]
END
GO

CREATE PROCEDURE dbo.usp_QueryByIdRodamiento_stock
    @ID INT
AS
BEGIN
    SELECT *
    FROM RODAMIENTO_STOCK
    WHERE ID = @ID;
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_QueryByIdMotorAC_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_QueryByIdMotorAC_stock]
END
GO

CREATE PROCEDURE dbo.usp_QueryByIdMotorAC_stock
    @ID INT
AS
BEGIN
    SELECT *
    FROM MOTORAC_STOCK
    WHERE ID = @ID;
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_QueryByIdMotorDC_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_QueryByIdMotorDC_stock]
END
GO

CREATE PROCEDURE dbo.usp_QueryByIdMotorDC_stock
    @ID INT
AS
BEGIN
    SELECT *
    FROM MOTORDC_STOCK
    WHERE ID = @ID;
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_QueryByIdTornillo_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_QueryByIdTornillo_stock]
END
GO

CREATE PROCEDURE dbo.usp_QueryByIdTornillo_stock
    @ID INT
AS
BEGIN
    SELECT *
    FROM TORNILLO_STOCK
    WHERE ID = @ID;
END
GO
---------------QUERYALL--------------------
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_QueryAllComponent_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_QueryAllComponent_stock]
END
GO

CREATE PROCEDURE dbo.usp_QueryAllComponent_stock
AS
BEGIN
    SELECT * FROM COMPONENT_STOCK;
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_QueryAllTornillo_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_QueryAllTornillo_stock]
END
GO

CREATE PROCEDURE dbo.usp_QueryAllTornillo_stock
AS
BEGIN
    SELECT * FROM TORNILLO_STOCK;
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_QueryAllMotorDC_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_QueryAllMotorDC_stock]
END
GO

CREATE PROCEDURE dbo.usp_QueryAllMotorDC_stock
AS
BEGIN
    SELECT * FROM MOTORDC_STOCK;
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_QueryAllMotorAC_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_QueryAllMotorAC_stock]
END
GO

CREATE PROCEDURE dbo.usp_QueryAllMotorAC_stock
AS
BEGIN
    SELECT * FROM MOTORAC_STOCK;
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_QueryAllRodamiento_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_QueryAllRodamiento_stock]
END
GO

CREATE PROCEDURE dbo.usp_QueryAllRodamiento_stock
AS
BEGIN
    SELECT * FROM RODAMIENTO_STOCK;
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_QueryAllPolea_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_QueryAllPolea_stock]
END
GO

CREATE PROCEDURE dbo.usp_QueryAllPolea_stock
AS
BEGIN
    SELECT * FROM POLEA_STOCK;
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_QueryAllFaja_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_QueryAllFaja_stock]
END
GO

CREATE PROCEDURE dbo.usp_QueryAllFaja_stock
AS
BEGIN
    SELECT * FROM FAJA_STOCK;
END
GO
-----------DETELE-------------------
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_DeleteTornillo_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_DeleteTornillo_stock]
END
GO

CREATE PROCEDURE dbo.usp_DeleteTornillo_stock (
    @ID INT
)
AS
BEGIN
    -- Eliminar en TORNILLO_STOCK
    DELETE FROM TORNILLO_STOCK WHERE ID = @ID;

    -- Eliminar en COMPONENT_STOCK
    DELETE FROM COMPONENT_STOCK WHERE COMPONENT_CODE = (SELECT COMPONENT_CODE FROM TORNILLO_STOCK WHERE ID = @ID);
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_DeleteMotorDC_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_DeleteMotorDC_stock]
END
GO

CREATE PROCEDURE dbo.usp_DeleteMotorDC_stock (
    @ID INT
)
AS
BEGIN
    -- Eliminar en MOTORDC_STOCK
    DELETE FROM MOTORDC_STOCK WHERE COMPONENT_CODE = (SELECT COMPONENT_CODE FROM COMPONENT_STOCK WHERE COMPONENT_CODE = @ID);

    -- Eliminar en COMPONENT_STOCK
    DELETE FROM COMPONENT_STOCK WHERE COMPONENT_CODE = @ID;
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_DeleteMotorAC_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_DeleteMotorAC_stock]
END
GO

CREATE PROCEDURE dbo.usp_DeleteMotorAC_stock (
    @ID INT
)
AS
BEGIN
    -- Eliminar en MOTORAC_STOCK
    DELETE FROM MOTORAC_STOCK WHERE COMPONENT_CODE = (SELECT COMPONENT_CODE FROM COMPONENT_STOCK WHERE COMPONENT_CODE = @ID);

    -- Eliminar en COMPONENT_STOCK
    DELETE FROM COMPONENT_STOCK WHERE COMPONENT_CODE = @ID;
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_DeleteRodamiento_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_DeleteRodamiento_stock]
END
GO

CREATE PROCEDURE dbo.usp_DeleteRodamiento_stock (
    @ID INT
)
AS
BEGIN
    -- Eliminar en RODAMIENTO_STOCK
    DELETE FROM RODAMIENTO_STOCK WHERE ID = @ID;

    -- Eliminar en COMPONENT_STOCK
    DELETE FROM COMPONENT_STOCK WHERE COMPONENT_CODE = (SELECT COMPONENT_CODE FROM RODAMIENTO_STOCK WHERE ID = @ID);
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_DeletePolea_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_DeletePolea_stock]
END
GO

CREATE PROCEDURE dbo.usp_DeletePolea_stock (
    @ID INT
)
AS
BEGIN
    -- Eliminar en POLEA_STOCK
    DELETE FROM POLEA_STOCK WHERE ID = @ID;

    -- Eliminar en COMPONENT_STOCK
    DELETE FROM COMPONENT_STOCK WHERE COMPONENT_CODE = (SELECT COMPONENT_CODE FROM POLEA_STOCK WHERE ID = @ID);
END
GO
IF EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[usp_DeleteFaja_stock]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1)
BEGIN
    DROP PROCEDURE [dbo].[usp_DeleteFaja_stock]
END
GO

CREATE PROCEDURE dbo.usp_DeleteFaja_stock (
    @ID INT
)
AS
BEGIN
    -- Eliminar en FAJA_STOCK
    DELETE FROM FAJA_STOCK WHERE ID = @ID;

    -- Eliminar en COMPONENT_STOCK
    DELETE FROM COMPONENT_STOCK WHERE COMPONENT_CODE = (SELECT COMPONENT_CODE FROM FAJA_STOCK WHERE ID = @ID);
END
GO

